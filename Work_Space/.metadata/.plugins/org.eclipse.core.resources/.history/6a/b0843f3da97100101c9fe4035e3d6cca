#include "stm32f4xx.h"
#include "uart.h"
#include "external_switch.h"
#include "exti.h"
#include <stdio.h>
#include "tim.h"


#define PB4_PIN		(1U<<4)
#define PB5_PIN		(1U<<5)
#define PB14_PIN	(1U<<14)
#define PB15_PIN	(1U<<15)

volatile uint8_t debounce_source = 0;

#define DEBOUNCE_PL	1
#define DEBOUNCE_PR 2
#define DEBOUNCE_TD 3
#define DEBOUNCE_TU 4

//int pl_switch = 0;
//int pr_switch = 0;
//int td_switch = 0;
//int tu_switch = 0;


int main(void)
{
	gpiob_switch_init();
	pbpins_exti_init();
	usart2_tx_init();

	while(1){

	}
}

/*Interrupts work but switches need debouncing*/
//TODO: Implement delays using timer to fix bouncing switches. (Add debouncing without doing delays inside the ISRs)
//Adding delays inside ISR is not good practice. ISRs should be as short and fast as possible.
//Keeping the CPU in a busy-wait loop inside an ISR means other interrupts could be delayed.
//You can lose responsiveness in real-time applications.
//Bad use of CPU time
//I want to move on but this is good for learning and writing the best code I can.
//Add above notes to notes file

void EXTI4_IRQHandler(void)
{
	/*Delay for debouncing*/
	//tim3_ms_delay(20);

	if((EXTI->PR & LINES4) != 0){
		/*Clear PR flag*/
		EXTI->PR |= LINE4;

		/*Disable EXTI4 line*/
		EXTI->IMR &= ~LINE4;

		debounce_source = DEBOUNCE_PL;

		tim3_start();

		/*What I did before*/
		//Do something...
		//printf("Pan Left...\n\r");
	}
}

void EXTI9_5_IRQHandler(void)
{
	/*Delay for debouncing*/
	//tim3_ms_delay(20);

	if((EXTI->PR & LINE5) != 0){
		/*Clear PR flag*/
		EXTI->PR |= LINE5;

		/*Disable EXTI5 line*/
		EXTI->IMR &= ~LINE5;

		debounce_source = DEBOUNCE_PR;

		tim3_start();

		//Do something...
		//printf("Pan Right...\n\r");
	}
}

void EXTI15_10_IRQHandler(void)
{
	/*Delay for debouncing*/
	//tim3_ms_delay(20);

	if((EXTI->PR & LINE14) != 0){
		/*Clear PR flag*/
		EXTI->PR |= LINE14;

		/*Disable EXTI14 line*/
		EXTI->IMR &= ~LINE14;

		debounce_source = DEBOUCE_TD;

		tim3_start();

		//Do something...
		//printf("Tilt Down...\n\r");
	}

	if((EXTI->PR & LINE15) != 0){
		/*Clear PR flag*/
		EXTI->PR |= LINE15;

		/*Disable EXTI15 line*/
		EXTI->IMR &= ~LINE15;

		debounce_source = DEBOUNCE_TU;

		tim3_start();

		//Do something...
		//printf("Tilt Up...\n\r");
	}
}

void TIM3_IRQHandler(void)
{
	if(TIM3->SR & SR_UIF){
		TIM3->SR &= ~SR_UIF;

		switch(debounce_source){
			case DEBOUNCE_PL:
				printf("Pan Left...\n\r");
				break;

			case DEBOUNCE_PR:
				printf("Pan Right...\n\r");
				break;

			case DEBOUNCE_TD:
				break;
		}
	}
}
